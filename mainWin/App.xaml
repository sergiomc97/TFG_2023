<Application x:Class="mainWin.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="Vistas/MainWindow.xaml"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <Application.Resources>

        <sys:Double x:Key="MidFontSize">5</sys:Double>
        <sys:Double x:Key="BaseFontSize">20</sys:Double>
        <sys:Double x:Key="DobleFontSize">40</sys:Double>
        <sys:Double x:Key="DobleDobleFontSize">60</sys:Double>
        <sys:Double x:Key="Bordersize">70</sys:Double>

        <Style x:Key="NoHoverButtonStyle"
               TargetType="Button">
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="Background"
                    Value="White" />
            <Style.Triggers>
                <!-- Cambiar color del ícono al pasar el mouse por encima -->
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Foreground"
                            Value="#ff6a00" />
                    <Setter Property="Background"
                            Value="#ff6a00" />

                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NoHoverToggleButtonStyle"
               TargetType="ToggleButton">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Cambiar color del ícono al pasar el mouse por encima -->
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Foreground"
                            Value="#ff6a00" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Estilo para cambiar el color del ícono al pasar el mouse por encima -->
        <Style x:Key="listItem"
               TargetType="ListBoxItem">
            <Setter Property="Foreground"
                    Value="Black" />
            <Style.Triggers>
                <!-- Cambiar color del ícono al pasar el mouse por encima -->
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Foreground"
                            Value="#ff6a00" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="gridExpand"
               TargetType="Grid">
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                 From="60"
                                                 To="200"
                                                 Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                 From="200"
                                                 To="60"
                                                 Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
















        <!-- Estilo para el memnu lateral -->
        <Style x:Key="MenuItemStyle"
               TargetType="ListBox">
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Disabled" />
            <Setter Property="HorizontalAlignment"
                    Value="left" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="Width"
                    Value="50" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="5" />
            <!--<Style.Triggers>
                -->
            <!-- Trigger para animar la expansión y contracción, y cambio de color del Foreground -->
            <!--
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                 From="50"
                                                 To="150"
                                                 Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Width"
                                                 From="150"
                                                 To="50"
                                                 Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>-->
        </Style>


        <Style TargetType="TextBox"
               x:Key="loginTextBox">
            <Setter Property="BorderThickness"
                    Value="0,0,0,1" />
            <Setter Property="BorderBrush"
                    Value="#80A0A0A0" />
            <Setter Property="Margin"
                    Value="10,10,10,20" /> 
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="Foreground"
                    Value="Gray" />
            <Setter Property="FontSize"
                    Value="20" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        </Style>

        <Style TargetType="PasswordBox"
               x:Key="loginTextBox2">
            <Setter Property="BorderThickness"
                    Value="0,0,0,1" />
            <Setter Property="BorderBrush"
                    Value="#80A0A0A0" />
            <Setter Property="Margin"
                    Value="10,10,10,20" />
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="Foreground"
                    Value="Gray" />
            <Setter Property="FontSize"
                    Value="20" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        </Style>


        <Style x:Key="ButtonStyleLogin"
               TargetType="Button">
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="5"
                                    Visibility="Visible" />
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Background="#3fb4c6"
                                        Width="5"
                                        Grid.Column="0"
                                        Visibility="Visible" />
                                <ContentPresenter Grid.Column="1"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="Border"
                                        Property="Background"
                                        Value="#E6E6E6" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="Border"
                                        Property="Background"
                                        Value="#CCCCCC" />
                                <Setter TargetName="Border"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="Border"
                                        Property="BorderThickness"
                                        Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="CircularButtonStyle"
               TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="#3fb4c6" />
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo textbox -->
        <Style x:Key="TextBoxStyle"
               TargetType="TextBox">
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="BorderBrush"
                    Value="Black" />
            <Setter Property="BorderThickness"
                    Value="0,0,0,1" />
            <Setter Property="Margin"
                    Value="10" />
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="Height"
                    Value="33" />
            <Setter Property="Foreground"
                    Value="#333333" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#EAEAEA" />
                    <Setter Property="BorderBrush"
                            Value="#fe6701" />
                </Trigger>

            </Style.Triggers>
        </Style>



        <!-- Estilo para el botón -->
        <Style x:Key="RoundButtonStyle"
               TargetType="Button">
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="2" />
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10"
                                      ShadowDepth="1"
                                      Opacity="0.4" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Cambio de color de borde al pasar el ratón por encima -->
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="BorderBrush"
                                        Value="#ff6a00" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para el botón2 -->
        <Style x:Key="RoundButtonStyle2"
               TargetType="Button">
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="2" />
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="Margin"
                    Value="10" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Cambio de color de borde al pasar el ratón por encima -->
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="#EAEAEA" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundButtonStyleConfig"
               TargetType="Button">
        
          
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="DimGray" />
                    <Setter Property="Foreground"
                            Value="Black" />
                </Trigger>
               
            </Style.Triggers>
        </Style>



        <!-- Estilo para las filas del datagrid-->
        <Style TargetType="DataGridRow"
               x:Key="TarjetaStyle">
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="BorderBrush"
                    Value="#f2f2f2" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Margin"
                    Value="0,0,0,10" />

            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="Height"
                    Value="60" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10"
                                      ShadowDepth="0"
                                      Opacity="0" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10"
                                              ShadowDepth="5"
                                              Opacity="0.5" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsSelected"
                         Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10"
                                              ShadowDepth="5"
                                              Opacity="0.5" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground"
                            Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="MinimalDataGridStyle"
               TargetType="DataGrid">
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="RowBackground"
                    Value="Transparent" />
            <Setter Property="AlternatingRowBackground"
                    Value="Transparent" />
            <Setter Property="GridLinesVisibility"
                    Value="None" />
            <Setter Property="HeadersVisibility"
                    Value="Column" />
            <Setter Property="RowHeight"
                    Value="80" />
            <Setter Property="CanUserAddRows"
                    Value="False" />
            <Setter Property="SelectionMode"
                    Value="Single" />
            <Setter Property="IsReadOnly"
                    Value="True" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
        </Style>


        <Style x:Key="MinimalDataGridHeaderStyle"
               TargetType="DataGridColumnHeader">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="Height"
                    Value="Auto" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid>
                            <Border x:Name="PART_HeaderBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>




        <!-- Estilo para las tarjetas pendientes-->
        <Style x:Key="TarjetaStyle2"
               TargetType="Border">
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="BorderBrush"
                    Value="#f2f2f2" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="Background"
                    Value="#f2f2f2" />
            <Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="Height"
                    Value="60" />
            <Setter Property="Width"
                    Value="Auto" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10"
                                      ShadowDepth="0"
                                      Opacity="0" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10"
                                              ShadowDepth="5"
                                              Opacity="0.5" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Estilo para la cabecera de las  tarjetas pendientes-->
        <Style x:Key="CabeceraStyle"
               TargetType="Border">
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="BorderBrush"
                    Value="#a2f2f2" />
            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="Background"
                    Value="#a2f2f2" />
            <Setter Property="CornerRadius"
                    Value="10,10,0,0" />
            <Setter Property="Height"
                    Value="Auto" />
            <Setter Property="Width"
                    Value="Auto" />
        </Style>


        <!-- Estilo para los botones de la  cabecera de las  tarjetas pendientes-->
        <Style x:Key="IconButtonStyle"
               TargetType="Button">
            <!--<Setter Property="FontSize" Value="15" />-->
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Texto -->
                            <ContentPresenter  HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Grid.Column="0" />

                            <!-- Icono -->

                            <TextBlock  HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Grid.Column="2"
                                        Text="&#xE8CB;"
                                        FontFamily="Segoe MDL2 Assets"
                                        Margin="10,0,0,0" />

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para los botones de la  cabecera de las  tarjetas pendientes-->
        <Style x:Key="IconButtonStyle2"
               TargetType="Button">
            <!--<Setter Property="FontSize" Value="15" />-->
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Texto -->
                            <ContentPresenter  HorizontalAlignment="Center"
                                               TextBlock.FontFamily="Segoe MDL2 Assets"
                                               TextBlock.Foreground="White"
                                               VerticalAlignment="Center"
                                               Grid.Column="0" />

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Estilo para los botones de la  cabecera de las  tarjetas pendientes-->
        <Style x:Key="IconButtonStyle3"
               TargetType="Button">
            <!--<Setter Property="FontSize" Value="15" />-->
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Texto -->
                            <ContentPresenter  HorizontalAlignment="Center"
                                               TextBlock.FontFamily="Segoe MDL2 Assets"
                                               TextBlock.Foreground="Black"
                                               VerticalAlignment="Center"
                                               Grid.Column="0" />

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Estilo para los botones de la  cabecera de las  tarjetas pendientes-->
        <Style x:Key="IconButtonStyleMenu"
               TargetType="Button">
            <!--<Setter Property="FontSize" Value="15" />-->
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Texto -->
                            <ContentPresenter  HorizontalAlignment="Center"
                                               TextBlock.FontFamily="Segoe MDL2 Assets"
                                               TextBlock.Foreground="Black"
                                               VerticalAlignment="Center"
                                               Grid.Column="0" />

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo para los botones de la  cabecera de las  tarjetas pendientes-->
        <Style x:Key="IconButtonStyle4"
               TargetType="Button">
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="Background"
                    Value="#33ff6a00" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Texto -->
                            <ContentPresenter TextBlock.FontFamily="Segoe MDL2 Assets"
                                              Grid.Column="0" />

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="HoverBorderStyle"
               TargetType="Border">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="Margin"
                    Value="-5,-5,-5,-5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#331A1A1A" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="HoverBorderStyle3"
               TargetType="Border">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <!--<Setter Property="Margin"
                    Value="-5,-5,-5,-5" />-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#33ff6a00" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="HoverBorderStyle2"
               TargetType="Border">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="Margin"
                    Value="-5,-5,-5,-5" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#a2f2f2" />
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style  x:Key="textBoxStyle"
                TargetType="TextBox">
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="Foreground"
                    Value="White" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="5" />
            <Setter Property="CaretBrush"
                    Value="White" />
            <Setter Property="SelectionBrush"
                    Value="White" />
            <Setter Property="SelectionOpacity"
                    Value="0.5" />
            <Setter Property="FontSize"
                    Value="15" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="15">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   StrokeDashArray="1 2"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   SnapsToDevicePixels="true"
                                   StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background"
                         Color="#FFFFFFFF" />
        <Style x:Key="ComboBoxEditableTextBox"
               TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="AllowDrop"
                    Value="true" />
            <Setter Property="MinWidth"
                    Value="0" />
            <Setter Property="MinHeight"
                    Value="0" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Background="Transparent"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="White"
                          Offset="0.0" />
            <GradientStop Color="White"
                          Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border"
                         Color="White" />
        <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                         Color="#FF606060" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                         Color="#FFABADB3" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                         Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                         Color="Transparent" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="White"
                          Offset="0.0" />
            <GradientStop Color="White"
                          Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border"
                         Color="#a2f2f2" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                         Color="#FF000000" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                         Color="#FF7EB4EA" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC"
                          Offset="0.0" />
            <GradientStop Color="#FFDCECFC"
                          Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                         Color="#FF7EB4EA" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="White"
                          Offset="0.0" />
            <GradientStop Color="White"
                          Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border"
                         Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                         Color="#FF000000" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                         Color="#FF569DE5" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC"
                          Offset="0.0" />
            <GradientStop Color="#FFC4E0FC"
                          Offset="1.0" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                         Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                         Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                         Color="#FFD9D9D9" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                         Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                         Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                         Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                         Color="Transparent" />
        <Style x:Key="ComboBoxToggleButton"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="ClickMode"
                    Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot"
                                Background="{StaticResource ComboBox.Static.Background}"
                                BorderBrush="{StaticResource ComboBox.Static.Border}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder"
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    HorizontalAlignment="Right"
                                    Margin="0"
                                    SnapsToDevicePixels="true"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow"
                                      Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                      Fill="{StaticResource ComboBox.Static.Glyph}"
                                      HorizontalAlignment="Center"
                                      Margin="0"
                                      VerticalAlignment="Center" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="false" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="false" />
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                <Setter Property="Background"
                                        TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Fill"
                                        TargetName="arrow"
                                        Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                               Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.MouseOver.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.MouseOver.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                <Setter Property="Background"
                                        TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Fill"
                                        TargetName="arrow"
                                        Value="{StaticResource ComboBox.Pressed.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                               Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Pressed.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Pressed.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                <Setter Property="Background"
                                        TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Fill"
                                        TargetName="arrow"
                                        Value="{StaticResource ComboBox.Disabled.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                               Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                               Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                <Setter Property="Background"
                                        TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate"
                         TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot"
                  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                      Width="0" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Grid.ColumnSpan="2"
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow"
                                                  Color="Transparent"
                                                  MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                            HorizontalAlignment="Left"
                                            Height="0"
                                            VerticalAlignment="Top"
                                            Width="0">
                                        <Rectangle x:Name="opaqueRect"
                                                   Fill="{Binding Background, ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Grid.ColumnSpan="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" />
                <Border x:Name="border"
                        Background="{StaticResource TextBox.Static.Background}"
                        Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                             Margin="{TemplateBinding Padding}"
                             Style="{StaticResource ComboBoxEditableTextBox}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled"
                         Value="false">
                    <Setter Property="Opacity"
                            TargetName="border"
                            Value="0.56" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin"
                         Value="true">
                    <Setter Property="Foreground"
                            Value="Black" />
                </Trigger>
                <Trigger Property="HasDropShadow"
                         SourceName="PART_Popup"
                         Value="true">
                    <Setter Property="Margin"
                            TargetName="shadow"
                            Value="0,0,5,5" />
                    <Setter Property="Color"
                            TargetName="shadow"
                            Value="#71000000" />
                </Trigger>
                <Trigger Property="HasItems"
                         Value="false">
                    <Setter Property="Height"
                            TargetName="dropDownBorder"
                            Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping"
                                   Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                   Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll"
                            Value="false" />
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll"
                         SourceName="DropDownScrollViewer"
                         Value="false">
                    <Setter Property="Canvas.Top"
                            TargetName="opaqueRect"
                            Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter Property="Canvas.Left"
                            TargetName="opaqueRect"
                            Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate"
                         TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot"
                  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                      Width="0" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Grid.ColumnSpan="2"
                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                       Margin="1"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow"
                                                  Color="Transparent"
                                                  MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                            HorizontalAlignment="Left"
                                            Height="0"
                                            VerticalAlignment="Top"
                                            Width="0">
                                        <Rectangle x:Name="opaqueRect"
                                                   Fill="{Binding Background, ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Grid.ColumnSpan="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" />
                <ContentPresenter x:Name="contentPresenter"
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  IsHitTestVisible="false"
                                  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow"
                         SourceName="PART_Popup"
                         Value="true">
                    <Setter Property="Margin"
                            TargetName="shadow"
                            Value="0,0,5,5" />
                    <Setter Property="Color"
                            TargetName="shadow"
                            Value="#71000000" />
                </Trigger>
                <Trigger Property="HasItems"
                         Value="false">
                    <Setter Property="Height"
                            TargetName="dropDownBorder"
                            Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping"
                                   Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                   Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll"
                            Value="false" />
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll"
                         SourceName="DropDownScrollViewer"
                         Value="false">
                    <Setter Property="Canvas.Top"
                            TargetName="opaqueRect"
                            Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter Property="Canvas.Left"
                            TargetName="opaqueRect"
                            Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1"
               TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource ComboBox.Static.Background}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ComboBox.Static.Border}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="Padding"
                    Value="6,3,5,3" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="Template"
                    Value="{StaticResource ComboBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEditable"
                         Value="true">
                    <Setter Property="IsTabStop"
                            Value="false" />
                    <Setter Property="Padding"
                            Value="2" />
                    <Setter Property="Template"
                            Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ListBoxItemContainerStyle1"
               TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="MouseOverForegroundBrush"
                                 Color="#ff6a00" />
            </Style.Resources>
            <Setter Property="Foreground"
                    Value="Black" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                    <Setter Property="Background"
                            Value="White" />
                    <Setter Property="BorderThickness"
                            Value="0" />
                    <Setter Property="Foreground"
                            Value="{StaticResource MouseOverForegroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
